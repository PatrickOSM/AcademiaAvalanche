@page "/EditTrainer/{CurrentID}"
@using AcademiaAvalanche.Data
@inject TrainerService objTrainerService
@inject NavigationManager NavigationManager

<h2>Editar Instrutor</h2>
<hr />
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="TrainerId" class="control-label">Matricula</label>
                <input form="TrainerId" class="form-control" @bind="@objTrainer.TrainerId" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Nome</label>
                <input form="Name" class="form-control" @bind="@objTrainer.Name" />
            </div>
            <div class="form-group">
                <label for="Cpf" class="control-label">CPF</label>
                <input form="Cpf" class="form-control" @bind="@objTrainer.Cpf" />
            </div>
            <div class="form-group">
                <label for="Rg" class="control-label">RG</label>
                <input form="Rg" class="form-control" @bind="@objTrainer.Rg" />
            </div>
            <div class="form-group">
                <label for="Address" class="control-label">Endereço</label>
                <input form="Address" class="form-control" @bind="@objTrainer.Address" />
            </div>
            <div class="form-group">
                <label for="Email" class="control-label">E-Mail</label>
                <input form="Email" class="form-control" @bind="@objTrainer.Email" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="UpdateTrainer" value="Salvar" />
                <input type="button" class="btn btn-primary" @onclick="Cancel" value="Cancelar" />
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public string CurrentID { get; set; }
    TrainerInfo objTrainer = new TrainerInfo();

    protected override async Task OnInitializedAsync()
    {
        objTrainer = await Task.Run(() => objTrainerService.GetTrainerById(Convert.ToInt32(CurrentID)));
    }

    protected void UpdateTrainer()
    {
        objTrainerService.UpdateTrainer(objTrainer);
        NavigationManager.NavigateTo("Trainer");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("Trainer");
    }

}
