@page "/Student"
@using AcademiaAvalanche.Data
@inject StudentService objStudentService

<NavLink class="nav-link" href="AddStudent">
    <span class="oi oi-plus" aria-hidden="true">Incluir</span>
</NavLink>

<h1>Informações do Aluno</h1>
@if (objStudent == null){
    <p><em>Carregando....</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Matricula</th>
                <th>Nome</th>
                <th>CPF</th>
                <th>RG</th>
                <th>Início Contrato</th>
                <th>Fim Contrato</th>
                <th>Endereço</th>
                <th>E-Mail</th>
                <th>Status</th>
                <th>Editar</th>
                <th>Deletar</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var student in objStudent)
            {
            <tr>
                <td>@student.StudentId</td>
                <td>@student.Name</td>
                <td>@student.Cpf</td>
                <td>@student.Rg</td>
                <td>@student.Date_Init_Cont</td>
                <td>@student.Date_End_Cont</td>
                <td>@student.Address</td>
                <td>@student.Email</td>
                <td>@student.Status</td>
                <td>
                    <a class="nav-link" href="EditStudent/@student.StudentId">
                        <span class="oi oi-pencil" aria-hidden="true"></span>
                    </a>
                </td>
                <td>
                    <a class="nav-link" href="DeleteStudent/@student.StudentId">
                        <span class="oi oi-trash" aria-hidden="true"></span>
                    </a>
                </td>
            </tr>
            }
        </tbody>
    </table>
}
@code {
    List<StudentInfo> objStudent;
    protected override async Task OnInitializedAsync()
    {
        objStudent = await Task.Run(() => objStudentService.GetStudent());
    }
}
